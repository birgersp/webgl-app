uniform mat4 view;
uniform mat4 projection;
uniform mat4 transform;

attribute vec3 position;
attribute vec3 normal;
attribute vec2 textureCoord;

varying vec2 vTextureCoord;
varying vec3 vSurfaceNormal;
varying vec3 vToLightVector;
varying vec3 vPosition;
varying float vVisibility;

void main() {

  // TODO: Remove hardcoded variables
  vec3 lightPosition = vec3(1000, 1000, 1000);
  float density = 0.007;
  float gradient = 1.5;

  vec4 worldPosition = transform * vec4(position, 1);
  vec4 positionToCamera = view * worldPosition;
  gl_Position = projection * positionToCamera;
  vTextureCoord = textureCoord;

  vSurfaceNormal = (transform * vec4(normal, 1)).xyz;
  vToLightVector = lightPosition - worldPosition.xyz;
  vPosition = position;

  float distance = length(positionToCamera.xyz);
  vVisibility = exp(-pow((distance * density), gradient));
  vVisibility = clamp(vVisibility, 0.0, 1.0);
}
