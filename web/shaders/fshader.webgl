precision mediump float;

uniform bool useColor;
uniform sampler2D sampler;
uniform bool useXZOutline;
uniform vec3 sunDirection;
uniform vec3 sunColor;

varying vec2 vTextureCoord;
varying vec3 vSurfaceNormal;
varying vec3 vPosition;
varying float vVisibility;

bool withinLine(vec3 position) {
  float lineWidth = 0.01;
  return floor(position.x) + lineWidth > position.x ||
         floor(position.z) + lineWidth > position.z;
}

void main() {

  // TODO: This vector should be the skybox texture
  vec3 background = vec3(0.7, 0.85, 1);

  vec3 surfaceNormalN = normalize(vSurfaceNormal);
  vec3 sunDirectionN = normalize(sunDirection);

  float nDot1 = dot(surfaceNormalN, -sunDirectionN);
  float brightness = max(nDot1, 0.3);
  vec4 diffuse = vec4(sunColor * brightness, 1);

  vec4 color;
  if (useXZOutline == true && withinLine(vPosition)) {
    color = vec4(0, 0, 0, 1);
  } else {
    color = diffuse * texture2D(sampler, vTextureCoord);
  }

  color = vec4(background * (1.0 - vVisibility) + color.xyz * vVisibility, 1);
  gl_FragColor = color;
}
